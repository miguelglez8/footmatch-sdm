// Generated by view binder compiler. Do not edit!
package com.example.footmatch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.footmatch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LineaRecyclerViewPartidoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView equipoLocalNombreTextView;

  @NonNull
  public final ImageView equipoVisitanteImageView;

  @NonNull
  public final TextView equipoVisitanteNombreTextView;

  @NonNull
  public final TextView fechaTextView;

  @NonNull
  public final ImageView imagenClasificacion;

  @NonNull
  public final TextView resultadoTextView;

  private LineaRecyclerViewPartidoBinding(@NonNull LinearLayout rootView,
      @NonNull TextView equipoLocalNombreTextView, @NonNull ImageView equipoVisitanteImageView,
      @NonNull TextView equipoVisitanteNombreTextView, @NonNull TextView fechaTextView,
      @NonNull ImageView imagenClasificacion, @NonNull TextView resultadoTextView) {
    this.rootView = rootView;
    this.equipoLocalNombreTextView = equipoLocalNombreTextView;
    this.equipoVisitanteImageView = equipoVisitanteImageView;
    this.equipoVisitanteNombreTextView = equipoVisitanteNombreTextView;
    this.fechaTextView = fechaTextView;
    this.imagenClasificacion = imagenClasificacion;
    this.resultadoTextView = resultadoTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LineaRecyclerViewPartidoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LineaRecyclerViewPartidoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.linea_recycler_view_partido, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LineaRecyclerViewPartidoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.equipoLocalNombreTextView;
      TextView equipoLocalNombreTextView = ViewBindings.findChildViewById(rootView, id);
      if (equipoLocalNombreTextView == null) {
        break missingId;
      }

      id = R.id.equipoVisitanteImageView;
      ImageView equipoVisitanteImageView = ViewBindings.findChildViewById(rootView, id);
      if (equipoVisitanteImageView == null) {
        break missingId;
      }

      id = R.id.equipoVisitanteNombreTextView;
      TextView equipoVisitanteNombreTextView = ViewBindings.findChildViewById(rootView, id);
      if (equipoVisitanteNombreTextView == null) {
        break missingId;
      }

      id = R.id.fechaTextView;
      TextView fechaTextView = ViewBindings.findChildViewById(rootView, id);
      if (fechaTextView == null) {
        break missingId;
      }

      id = R.id.imagenClasificacion;
      ImageView imagenClasificacion = ViewBindings.findChildViewById(rootView, id);
      if (imagenClasificacion == null) {
        break missingId;
      }

      id = R.id.resultadoTextView;
      TextView resultadoTextView = ViewBindings.findChildViewById(rootView, id);
      if (resultadoTextView == null) {
        break missingId;
      }

      return new LineaRecyclerViewPartidoBinding((LinearLayout) rootView, equipoLocalNombreTextView,
          equipoVisitanteImageView, equipoVisitanteNombreTextView, fechaTextView,
          imagenClasificacion, resultadoTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
