// Generated by view binder compiler. Do not edit!
package com.example.footmatch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.footmatch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LinearScorerLigaBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView goalsCountTextView;

  @NonNull
  public final TextView matchesPlayedTextView;

  @NonNull
  public final ImageView newImageView;

  @NonNull
  public final TextView playerNameTextView;

  @NonNull
  public final ImageView teamLogoImageView;

  @NonNull
  public final TextView teamNameTextView;

  private LinearScorerLigaBinding(@NonNull LinearLayout rootView,
      @NonNull TextView goalsCountTextView, @NonNull TextView matchesPlayedTextView,
      @NonNull ImageView newImageView, @NonNull TextView playerNameTextView,
      @NonNull ImageView teamLogoImageView, @NonNull TextView teamNameTextView) {
    this.rootView = rootView;
    this.goalsCountTextView = goalsCountTextView;
    this.matchesPlayedTextView = matchesPlayedTextView;
    this.newImageView = newImageView;
    this.playerNameTextView = playerNameTextView;
    this.teamLogoImageView = teamLogoImageView;
    this.teamNameTextView = teamNameTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LinearScorerLigaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LinearScorerLigaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.linear_scorer_liga, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LinearScorerLigaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.goalsCountTextView;
      TextView goalsCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (goalsCountTextView == null) {
        break missingId;
      }

      id = R.id.matchesPlayedTextView;
      TextView matchesPlayedTextView = ViewBindings.findChildViewById(rootView, id);
      if (matchesPlayedTextView == null) {
        break missingId;
      }

      id = R.id.newImageView;
      ImageView newImageView = ViewBindings.findChildViewById(rootView, id);
      if (newImageView == null) {
        break missingId;
      }

      id = R.id.playerNameTextView;
      TextView playerNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (playerNameTextView == null) {
        break missingId;
      }

      id = R.id.teamLogoImageView;
      ImageView teamLogoImageView = ViewBindings.findChildViewById(rootView, id);
      if (teamLogoImageView == null) {
        break missingId;
      }

      id = R.id.teamNameTextView;
      TextView teamNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (teamNameTextView == null) {
        break missingId;
      }

      return new LinearScorerLigaBinding((LinearLayout) rootView, goalsCountTextView,
          matchesPlayedTextView, newImageView, playerNameTextView, teamLogoImageView,
          teamNameTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
